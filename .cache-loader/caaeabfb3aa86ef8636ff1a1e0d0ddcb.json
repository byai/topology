{"remainingRequest":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js??ref--6-oneOf-1-1!/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js??ref--6-oneOf-1-2!/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js??ref--5-0!/Users/zhangtengjin/Desktop/byai/topology/src/demo/App.tsx","dependencies":[{"path":"/Users/zhangtengjin/Desktop/byai/topology/src/demo/App.tsx","mtime":1685951626917},{"path":"/Users/zhangtengjin/Desktop/byai/topology/package.json","mtime":1685951404367},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/cache-loader/dist/cjs.js","mtime":1684841559863},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js","mtime":1684841570187},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js","mtime":1684835071408},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js","mtime":1684841566493}],"contextDependencies":[],"result":["import _classCallCheck from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/zhangtengjin/Desktop/byai/topology/src/demo/App.tsx\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n/* eslint-disable no-console */\nimport React from 'react';\nimport * as Lib from '../lib';\nimport './index.less';\nvar Topology = Lib.Topology,\n  topologyWrapper = Lib.topologyWrapper,\n  TemplateWrapper = Lib.TemplateWrapper;\nvar Flow = /*#__PURE__*/function (_React$Component) {\n  _inherits(Flow, _React$Component);\n  var _super = _createSuper(Flow);\n  function Flow() {\n    var _this;\n    _classCallCheck(this, Flow);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      data: {\n        lines: [{\n          start: '1585466878859-0',\n          end: '1585466718867',\n          color: '#b71522'\n        }],\n        nodes: [{\n          id: '1585466878859',\n          name: '窄节点',\n          content: '这是一个窄节点',\n          branches: ['锚点1'],\n          position: {\n            x: 19726.906692504883,\n            y: 19512.21832561493\n          },\n          filterOverlap: true\n        }, {\n          id: '1585466718867',\n          name: '宽节点',\n          content: '这是一个宽节点',\n          branches: ['锚点1', '锚点2', '锚点3'],\n          position: {\n            x: 19629.79557800293,\n            y: 19696.197512626648\n          }\n          // canDrag: false,\n        }]\n      },\n\n      readonly: false,\n      overlap: false,\n      showBar: true,\n      canConnectMultiLines: false,\n      snapline: true\n    };\n    // eslint-disable-next-line\n    _this.topology = null;\n    _this.generatorNodeData = function (isBig) {\n      return {\n        id: \"\".concat(Date.now()),\n        name: isBig ? '宽节点' : '窄节点',\n        content: isBig ? '这是一个宽节点' : '这是一个窄节点',\n        branches: isBig ? ['锚点1', '锚点2', '锚点3'] : ['锚点1'],\n        dragChild: isBig\n      };\n    };\n    _this.handleSelect = function (data) {\n      console.log(data);\n    };\n    _this.renderTreeNode = function (data, _ref) {\n      var anchorDecorator = _ref.anchorDecorator;\n      var _data$name = data.name,\n        name = _data$name === void 0 ? '' : _data$name,\n        _data$content = data.content,\n        content = _data$content === void 0 ? '' : _data$content,\n        _data$branches = data.branches,\n        branches = _data$branches === void 0 ? [] : _data$branches;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topology-node\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"node-header\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 17\n        }\n      }, name), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"node-content\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }\n      }, content), branches.length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flow-node-branches-wrapper\",\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      }, branches.map(function (item, index) {\n        return anchorDecorator({\n          anchorId: \"\".concat(index)\n        })( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"flow-node-branch\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 32\n          }\n        }, item));\n      })));\n    };\n    _this.onChange = function (data) {\n      _this.setState({\n        data: data\n      });\n    };\n    return _this;\n  }\n  _createClass(Flow, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n      var _this$state = this.state,\n        data = _this$state.data,\n        readonly = _this$state.readonly,\n        showBar = _this$state.showBar,\n        overlap = _this$state.overlap,\n        canConnectMultiLines = _this$state.canConnectMultiLines,\n        snapline = _this$state.snapline;\n      var mockLineColor = {\n        0: '#82BEFF',\n        1: '#FFA39E',\n        2: '#FFC89E'\n      };\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topology\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Topology, {\n        isReduceRender: true,\n        data: data,\n        autoLayout: true,\n        lineColor: mockLineColor,\n        onChange: this.onChange,\n        onSelect: this.handleSelect,\n        renderTreeNode: this.renderTreeNode,\n        lineLinkageHighlight: true,\n        readOnly: readonly,\n        scaleNum: 1,\n        showBar: showBar,\n        snapline: snapline,\n        showDownload: true,\n        downloadImg: function downloadImg() {\n          _this2.topology.downloadImg(true, '测试图片名称');\n        },\n        customPostionHeight: 20,\n        canConnectMultiLines: canConnectMultiLines,\n        overlap: overlap,\n        overlapOffset: {\n          offsetX: 30,\n          offsetY: 30\n        },\n        getInstance:\n        // eslint-disable-next-line\n        function getInstance(ins) {\n          _this2.topology = ins;\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topology-templates\",\n        \"data-html2canvas-ignore\": \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            readonly: !readonly\n          });\n        },\n        style: {\n          marginBottom: 20\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }\n      }, readonly ? '只读' : '可编辑'), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            overlap: !overlap\n          });\n        },\n        style: {\n          marginBottom: 20\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }, overlap ? '不允许节点覆盖' : '允许节点覆盖'), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this2.topology.handleSelectAll();\n        },\n        style: {\n          marginBottom: 20\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 21\n        }\n      }, \"\\u5168\\u9009\"), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            showBar: !showBar\n          });\n        },\n        style: {\n          marginBottom: 20\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }\n      }, \"\".concat(showBar ? '隐藏' : '显示', \"\\u5DE5\\u5177\\u680F\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            canConnectMultiLines: !canConnectMultiLines\n          });\n        },\n        style: {\n          marginBottom: 20\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }\n      }, \"\\u951A\\u70B9\".concat(canConnectMultiLines ? '不可' : '可', \"\\u8FDE\\u63A5\\u591A\\u6761\\u7EBF\")), /*#__PURE__*/React.createElement(\"button\", {\n        onClick: function onClick() {\n          return _this2.setState({\n            snapline: !snapline\n          });\n        },\n        style: {\n          marginBottom: 20\n        },\n        type: \"button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      }, \"\\u5C55\\u793A\\u8F85\\u52A9\\u5BF9\\u9F50\\u7EBF\"), /*#__PURE__*/React.createElement(TemplateWrapper, {\n        generator: function generator() {\n          return _this2.generatorNodeData(true);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topology-templates-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 25\n        }\n      }, \"\\u5BBD\\u8282\\u70B9\")), /*#__PURE__*/React.createElement(TemplateWrapper, {\n        generator: function generator() {\n          return _this2.generatorNodeData(false);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"topology-templates-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }\n      }, \"\\u7A84\\u8282\\u70B9\"))));\n    }\n  }]);\n  return Flow;\n}(React.Component);\nexport default topologyWrapper(Flow);",{"version":3,"names":["React","Lib","Topology","topologyWrapper","TemplateWrapper","Flow","_React$Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","data","lines","start","end","color","nodes","id","name","content","branches","position","x","y","filterOverlap","readonly","overlap","showBar","canConnectMultiLines","snapline","topology","generatorNodeData","isBig","Date","now","dragChild","handleSelect","console","log","renderTreeNode","_ref","anchorDecorator","_data$name","_data$content","_data$branches","createElement","className","__self","_assertThisInitialized","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","anchorId","onChange","setState","_createClass","key","value","render","_this2","_this$state","mockLineColor","style","width","height","isReduceRender","autoLayout","lineColor","onSelect","lineLinkageHighlight","readOnly","scaleNum","showDownload","downloadImg","customPostionHeight","overlapOffset","offsetX","offsetY","getInstance","ins","onClick","marginBottom","type","handleSelectAll","generator","Component"],"sources":["/Users/zhangtengjin/Desktop/byai/topology/src/demo/App.tsx"],"sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\nimport * as Lib from '../lib';\nimport { ITopologyNode, ITopologyData, IWrapperOptions } from '../lib/declare';\nimport './index.less';\n\nconst { Topology, topologyWrapper, TemplateWrapper } = Lib;\ninterface FlowState {\n    data: ITopologyData;\n    readonly: boolean;\n    overlap?: boolean;\n    showBar?: boolean;\n    snapline?: boolean;\n    canConnectMultiLines?: boolean;\n}\nclass Flow extends React.Component<{}, FlowState> {\n    state: FlowState = {\n        data: {\n            lines: [\n                {\n                    start: '1585466878859-0',\n                    end: '1585466718867',\n                    color: '#b71522',\n                },\n            ],\n            nodes: [\n                {\n                    id: '1585466878859',\n                    name: '窄节点',\n                    content: '这是一个窄节点',\n                    branches: ['锚点1'],\n                    position: {\n                        x: 19726.906692504883,\n                        y: 19512.21832561493,\n                    },\n                    filterOverlap: true\n                },\n                {\n                    id: '1585466718867',\n                    name: '宽节点',\n                    content: '这是一个宽节点',\n                    branches: ['锚点1', '锚点2', '锚点3'],\n                    position: {\n                        x: 19629.79557800293,\n                        y: 19696.197512626648,\n                    },\n                    // canDrag: false,\n                },\n            ],\n        },\n        readonly: false,\n        overlap: false,\n        showBar: true,\n        canConnectMultiLines: false,\n        snapline: true,\n    };\n    // eslint-disable-next-line\n    topology: any = null;\n\n    generatorNodeData = (isBig: boolean) => ({\n        id: `${Date.now()}`,\n        name: isBig ? '宽节点' : '窄节点',\n        content: isBig ? '这是一个宽节点' : '这是一个窄节点',\n        branches: isBig ? ['锚点1', '锚点2', '锚点3'] : ['锚点1'],\n        dragChild: isBig\n    });\n\n    handleSelect = (data: ITopologyData) => {\n        console.log(data);\n    }\n\n    renderTreeNode = (data: ITopologyNode, { anchorDecorator }: IWrapperOptions) => {\n        const {\n            name = '',\n            content = '',\n            branches = [],\n        } = data;\n        return (\n            <div className=\"topology-node\">\n                <div className=\"node-header\">{name}</div>\n                <p className=\"node-content\">{content}</p>\n                {branches.length > 0 && (\n                    <div className=\"flow-node-branches-wrapper\">\n                        {branches.map(\n                            (item: string, index: number) => anchorDecorator({\n                                anchorId: `${index}`,\n                            })(<div className=\"flow-node-branch\">{item}</div>),\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    };\n\n    onChange = (data: ITopologyData) => {\n        this.setState({ data });\n    };\n\n    render() {\n        const {\n            data, readonly, showBar, overlap,\n            canConnectMultiLines, snapline\n        } = this.state;\n        const mockLineColor = {\n            0: '#82BEFF',\n            1: '#FFA39E',\n            2: '#FFC89E',\n        };\n        return (\n            <div className=\"topology\">\n                <div style={{ width: '100%', height: '100%' }}>\n                    <Topology\n                        isReduceRender\n                        data={data}\n                        autoLayout\n                        lineColor={mockLineColor}\n                        onChange={this.onChange}\n                        onSelect={this.handleSelect}\n                        renderTreeNode={this.renderTreeNode}\n                        lineLinkageHighlight\n                        readOnly={readonly}\n                        scaleNum={1}\n                        showBar={showBar}\n                        snapline={snapline}\n                        showDownload\n                        downloadImg={() => {\n                            this.topology.downloadImg(true, '测试图片名称');\n                        }}\n                        customPostionHeight={20}\n                        canConnectMultiLines={canConnectMultiLines}\n                        overlap={overlap}\n                        overlapOffset={{\n                            offsetX: 30,\n                            offsetY: 30\n                        }}\n                        getInstance={\n                            // eslint-disable-next-line\n                            (ins: any) => { this.topology = ins; }}\n                    />\n                </div>\n                <div className=\"topology-templates\" data-html2canvas-ignore=\"true\">\n                    <button\n                        onClick={() => this.setState({ readonly: !readonly })}\n                        style={{ marginBottom: 20 }}\n                        type=\"button\"\n                    >\n                        {readonly ? '只读' : '可编辑'}\n                    </button>\n                    <button\n                        onClick={() => this.setState({ overlap: !overlap })}\n                        style={{ marginBottom: 20 }}\n                        type=\"button\"\n                    >\n                        {overlap ? '不允许节点覆盖' : '允许节点覆盖'}\n                    </button>\n                    <button\n                        onClick={() => {\n                            this.topology.handleSelectAll();\n                        }}\n                        style={{ marginBottom: 20 }}\n                        type=\"button\"\n                    >\n                        全选\n                    </button>\n                    <button\n                        onClick={() => this.setState({ showBar: !showBar })}\n                        style={{ marginBottom: 20 }}\n                        type=\"button\"\n                    >\n                        {`${showBar ? '隐藏' : '显示'}工具栏`}\n                    </button>\n                    <button\n                        onClick={() => this.setState({ canConnectMultiLines: !canConnectMultiLines })}\n                        style={{ marginBottom: 20 }}\n                        type=\"button\"\n                    >\n                        {`锚点${canConnectMultiLines ? '不可' : '可'}连接多条线`}\n                    </button>\n                    <button\n                        onClick={() => this.setState({ snapline: !snapline })}\n                        style={{ marginBottom: 20 }}\n                        type=\"button\"\n                    >\n                        展示辅助对齐线\n                    </button>\n                    <TemplateWrapper generator={() => this.generatorNodeData(true)}>\n                        <div className=\"topology-templates-item\">宽节点</div>\n                    </TemplateWrapper>\n                    <TemplateWrapper generator={() => this.generatorNodeData(false)}>\n                        <div className=\"topology-templates-item\">窄节点</div>\n                    </TemplateWrapper>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default topologyWrapper(Flow);\n"],"mappings":"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"}]}