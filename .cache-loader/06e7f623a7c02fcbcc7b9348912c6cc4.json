{"remainingRequest":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js??ref--6-oneOf-1-1!/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js??ref--6-oneOf-1-2!/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js??ref--5-0!/Users/zhangtengjin/Desktop/byai/topology/src/lib/utils/index.ts","dependencies":[{"path":"/Users/zhangtengjin/Desktop/byai/topology/src/lib/utils/index.ts","mtime":1686018435907},{"path":"/Users/zhangtengjin/Desktop/byai/topology/package.json","mtime":1685951404367},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/cache-loader/dist/cjs.js","mtime":1684841559863},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/thread-loader/dist/cjs.js","mtime":1684841570187},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-loader/lib/index.js","mtime":1684835071408},{"path":"/Users/zhangtengjin/Desktop/byai/topology/node_modules/eslint-loader/index.js","mtime":1684841566493}],"contextDependencies":[],"result":["import _defineProperty from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _typeof from \"/Users/zhangtengjin/Desktop/byai/topology/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof\";\n// import { path } from 'd3-path';\n\nexport var shouldAutoLayout = function shouldAutoLayout(nodes) {\n  if (nodes.length === 0) {\n    return false;\n  }\n  return !nodes.find(function (item) {\n    return !!item.position;\n  });\n};\nvar computeCanvasPoHelper = function computeCanvasPoHelper($wrapper) {\n  // 当窗口有滚动时，需加上窗口的滚动\n  var rect = $wrapper.getBoundingClientRect();\n  // 缩放的容器\n  var canvas = document.querySelector('.topology-canvas');\n  // 可以获取到 svg 的宽高\n  var _canvas$getBoundingCl = canvas.getBoundingClientRect(),\n    width = _canvas$getBoundingCl.width,\n    height = _canvas$getBoundingCl.height; // eslint-disable-next-line radix\n  var zoom = parseInt(document.querySelector('.topology-tools-percent').innerHTML) / 100;\n  // 缩放后画布的中心点,还是需要用缩放前的比例计算中心点\n  var centerX = width / zoom / 2;\n  var centerY = height / zoom / 2;\n  return {\n    centerX: centerX,\n    centerY: centerY,\n    rect: rect,\n    zoom: zoom,\n    scrollLeft: $wrapper.scrollLeft,\n    scrollTop: $wrapper.scrollTop\n  };\n};\n\n/**\n * 获取相对画布的坐标\n * TODO: 缩放 scale 之后 position 计算有问题，暂时没有想到可以绕过去的方法\n * https://github.com/react-dnd/react-dnd/issues/1730\n * fix：核心逻辑，缩放后以 1 的比例去思考\n * 计算公式：找到中心点的位置 +（鼠标位置 - 中心点的距离) / 缩放）+（一些 dom 的偏离）/ 缩放\n */\nexport var computeCanvasPo = function computeCanvasPo(position, $wrapper) {\n  var _computeCanvasPoHelpe = computeCanvasPoHelper($wrapper),\n    centerX = _computeCanvasPoHelpe.centerX,\n    centerY = _computeCanvasPoHelpe.centerY,\n    rect = _computeCanvasPoHelpe.rect,\n    zoom = _computeCanvasPoHelpe.zoom,\n    scrollLeft = _computeCanvasPoHelpe.scrollLeft,\n    scrollTop = _computeCanvasPoHelpe.scrollTop;\n  var po = {\n    x: centerX + (position.x - centerX) / zoom + (scrollLeft + window.pageXOffset - rect.left) / zoom,\n    y: centerY + (position.y - centerY) / zoom + (scrollTop + window.pageYOffset - rect.top) / zoom\n  };\n  return po;\n};\nexport var multiComputeCanvasPo = function multiComputeCanvasPo(positionList, $wrapper) {\n  var _computeCanvasPoHelpe2 = computeCanvasPoHelper($wrapper),\n    centerX = _computeCanvasPoHelpe2.centerX,\n    centerY = _computeCanvasPoHelpe2.centerY,\n    rect = _computeCanvasPoHelpe2.rect,\n    zoom = _computeCanvasPoHelpe2.zoom,\n    scrollLeft = _computeCanvasPoHelpe2.scrollLeft,\n    scrollTop = _computeCanvasPoHelpe2.scrollTop;\n  return positionList.map(function (position) {\n    var po = {\n      x: centerX + (position.x - centerX) / zoom + (scrollLeft + window.pageXOffset - rect.left) / zoom,\n      y: centerY + (position.y - centerY) / zoom + (scrollTop + window.pageYOffset - rect.top) / zoom\n    };\n    return po;\n  });\n};\n\n/** 计算连接线路径 */\nexport var computeLinePath = function computeLinePath(start, end) {\n  var lineOffsetY = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  // const svgPath = path();\n  // // 直线绘制方式（代码暂时保留）\n  // const distance = Math.abs(start.y - end.y) * 0.5 + start.y;\n  // const polyLineY = end.y - start.y < 0 ? end.y - 40 : distance;\n  // const verticalPolyPoint = {\n  //     x: start.x,\n  //     y: polyLineY,\n  // };\n  // const horizontalPolyPoint = {\n  //     x: end.x,\n  //     y: polyLineY,\n  // };\n  // // A collection of points for drawing a line\n  // const linePoints = [\n  //     [{ ...start, y: end.y - start.y < 0 ? start.y - 20 : start.y }, verticalPolyPoint],\n  //     [verticalPolyPoint, horizontalPolyPoint],\n  //     [horizontalPolyPoint, end],\n  // ];\n  // // eslint-disable-next-line\n  // for (let [startPoint, endPoint] of linePoints) {\n  //     svgPath.moveTo(startPoint.x, startPoint.y);\n  //     svgPath.lineTo(endPoint.x, endPoint.y);\n  // }\n  // 弧线绘制方式\n  var x = Math.abs(start.x - end.x);\n  var y = Math.abs(start.y - end.y);\n  if (x === 0 || y === 0) {\n    return \"\\n            M \".concat(start.x, \" \").concat(start.y, \"\\n            L \").concat(end.x, \" \").concat(end.y, \"\\n        \");\n  }\n  var dir;\n  var p1;\n  var p2;\n  if (end.y < start.y) {\n    var offsetY = 80;\n    var offsetX = 40;\n    dir = end.x - start.x > 0 ? 1 : -1;\n    p1 = \"\".concat(start.x + dir * offsetX, \", \").concat(start.y + offsetY);\n    p2 = \"\".concat(end.x - dir * offsetX, \", \").concat(end.y - offsetY);\n    return \"\\n            M \".concat(start.x, \" \").concat(start.y - lineOffsetY, \"\\n            C \").concat(p1, \" \").concat(p2, \" \").concat(end.x, \" \").concat(end.y, \"\\n        \");\n  }\n  var OffsetXP1 = +(1 / 12 * x).toFixed(0);\n  var OffsetXP2 = +(11 / 12 * x).toFixed(0);\n  var offsetYP1 = +(1 / 3 * y).toFixed(0);\n  var offsetYP2 = +(2 / 3 * y).toFixed(0);\n  dir = start.x - end.x > 0 ? -1 : 1;\n  p1 = \"\".concat(start.x + dir * OffsetXP1, \", \").concat(start.y + offsetYP1);\n  p2 = \"\".concat(start.x + dir * OffsetXP2, \", \").concat(start.y + offsetYP2);\n  return \"\\n        M \".concat(start.x, \" \").concat(start.y - lineOffsetY, \"\\n        C \").concat(p1, \" \").concat(p2, \" \").concat(end.x, \" \").concat(end.y, \"\\n    \");\n} /* istanbul ignore next */;\n\n/** 计算三角形路径 */\nexport var computeTrianglePath = function computeTrianglePath(start, width) {\n  return \"\\n    M \".concat(start.x, \" \").concat(start.y, \"\\n    l \").concat(width / 2, \" 0\\n    l \").concat(-width / 2, \" \").concat(width, \"\\n    l \").concat(-width / 2, \" \").concat(-width, \"\\n    Z\\n\");\n};\nexport var getNodeSize = function getNodeSize(dom) {\n  if (['string', 'number'].indexOf(_typeof(dom)) > -1) {\n    // eslint-disable-next-line no-param-reassign\n    dom = document.getElementById(\"dom-map-\".concat(dom));\n  }\n  if (!dom) {\n    return {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0\n    };\n  }\n  return dom.getBoundingClientRect();\n};\nexport var impactCheck = function impactCheck(point, size, position) {\n  var withinX = point.x >= position.x && point.x <= position.x + size.width;\n  var withinY = point.y >= position.y && point.y <= position.y + size.height;\n  return withinX && withinY;\n};\n\n/** 计算锚点位置 */\nexport var computeAnchorPo = function computeAnchorPo(anchor, parentNode) {\n  var $anchor = document.getElementById(anchor);\n  if (!$anchor) {\n    return null;\n  }\n  var anchorSize = getNodeSize($anchor);\n  var parentSize = getNodeSize(parentNode.id);\n  var parentPosition = parentNode.position || {\n    x: 0,\n    y: 0\n  };\n  var dX = anchorSize.left - parentSize.left;\n  var dY = anchorSize.top - parentSize.top;\n  var po = {\n    x: parentPosition.x + dX + anchorSize.width / 2,\n    y: parentPosition.y + dY + anchorSize.height\n  };\n  if (Number.isNaN(po.x) || Number.isNaN(po.y)) {\n    return null;\n  }\n  return po;\n};\nexport var computeMaxAndMin = function computeMaxAndMin(nodes) {\n  // @ts-ignore\n  if (!nodes.length || nodes.find(function (item) {\n    return !item.position || [item.position.x, item.position.y].includes(undefined);\n  })) {\n    return null;\n  }\n  var minX = Infinity;\n  var maxX = -Infinity;\n  var minY = Infinity;\n  var maxY = -Infinity;\n  nodes.forEach(function (_ref) {\n    var position = _ref.position,\n      id = _ref.id;\n    var nodeSize = getNodeSize(id);\n    var x = position.x,\n      y = position.y;\n    minX = Math.min(minX, x);\n    maxX = Math.max(maxX, x + nodeSize.width);\n    minY = Math.min(minY, y);\n    maxY = Math.max(maxY, y + nodeSize.height);\n  });\n  return {\n    minX: minX,\n    maxX: maxX,\n    minY: minY,\n    maxY: maxY\n  };\n};\nexport var getMaxAndMinNodeId = function getMaxAndMinNodeId(nodes) {\n  // @ts-ignore\n  if (!nodes.length || nodes.find(function (item) {\n    return !item.position || [item.position.x, item.position.y].includes(undefined);\n  })) {\n    return null;\n  }\n  var minX = Infinity;\n  var maxX = -Infinity;\n  var minY = Infinity;\n  var maxY = -Infinity;\n  var minXId = null;\n  var maxXId = null;\n  var minYId = null;\n  var maxYId = null;\n  nodes.forEach(function (_ref2) {\n    var position = _ref2.position,\n      id = _ref2.id;\n    var x = position.x,\n      y = position.y;\n    minX = Math.min(minX, x);\n    maxX = Math.max(maxX, x);\n    minY = Math.min(minY, y);\n    maxY = Math.max(maxY, y);\n    if (x === minX) {\n      minXId = id;\n    }\n    if (x === maxX) {\n      maxXId = id;\n    }\n    if (y === minY) {\n      minYId = id;\n    }\n    if (y === maxY) {\n      maxYId = id;\n    }\n  });\n  return {\n    minXId: minXId,\n    maxXId: maxXId,\n    minYId: minYId,\n    maxYId: maxYId\n  };\n};\n\n/**\n * TODO: 缩放之后影响到计算判断, viewHeight 可视化高度区分判断是画布高度还是屏幕高度\n * 判断节点是否位于可视区域内\n * @param nodeId\n * @param doc\n * @returns\n */\nexport var isInViewPort = function isInViewPort(nodeId, doc) {\n  var viewWidth = window.innerWidth || document.documentElement.clientWidth;\n  // const viewHeight = window.innerHeight || document.documentElement.clientHeight;\n  var viewHeight = document.documentElement.offsetHeight;\n  var _doc$getElementById$g = doc.getElementById(\"topology-node-\".concat(nodeId)).getBoundingClientRect(),\n    top = _doc$getElementById$g.top,\n    right = _doc$getElementById$g.right,\n    bottom = _doc$getElementById$g.bottom,\n    left = _doc$getElementById$g.left;\n  return top >= 0 && left >= 0 && right <= viewWidth && bottom <= viewHeight;\n};\nexport var computeContentCenter = function computeContentCenter(nodes) {\n  if (!computeMaxAndMin(nodes)) return null;\n  var _computeMaxAndMin = computeMaxAndMin(nodes),\n    minX = _computeMaxAndMin.minX,\n    maxX = _computeMaxAndMin.maxX,\n    minY = _computeMaxAndMin.minY,\n    maxY = _computeMaxAndMin.maxY;\n  return {\n    x: (minX + maxX) / 2,\n    y: (minY + maxY) / 2\n  };\n};\n\n/**\n * 滚动 Y 轴距离顶部距离\n */\nexport var computeContentPostionY = function computeContentPostionY(nodes) {\n  if (!computeMaxAndMin(nodes)) return null;\n  var _computeMaxAndMin2 = computeMaxAndMin(nodes),\n    minX = _computeMaxAndMin2.minX,\n    maxX = _computeMaxAndMin2.maxX,\n    minY = _computeMaxAndMin2.minY;\n  return {\n    x: (minX + maxX) / 2,\n    y: minY\n  };\n};\n\n/** 计算节点连接处 */\nexport var computeNodeInputPo = function computeNodeInputPo(node) {\n  var $node = document.getElementById(\"dom-map-\".concat(node.id));\n  if (!$node) {\n    return null;\n  }\n  var nodeSize = getNodeSize($node);\n  // eslint-disable-next-line no-param-reassign\n  node.position = node.position || {\n    x: 0,\n    y: 0\n  };\n  var po = {\n    x: node.position.x + nodeSize.width / 2,\n    y: node.position.y\n  };\n  if (Number.isNaN(po.x) || Number.isNaN(po.y)) {\n    return null;\n  }\n  return po;\n};\n\n/** 计算鼠标相对画布位置 */\nexport var computeMouseClientToCanvas = function computeMouseClientToCanvas(clientX, clientY, $wrapper) {\n  var rect = $wrapper.getBoundingClientRect();\n  var dX = clientX - rect.left;\n  var dY = clientY - rect.top;\n  return {\n    x: $wrapper.scrollLeft + dX,\n    y: $wrapper.scrollTop + dY\n  };\n};\nexport var createHashFromObjectArray = function createHashFromObjectArray(arr, field) {\n  return arr.reduce(function (pre, cur) {\n    var key = typeof field === 'string' ? cur[field] : field(cur);\n    return _objectSpread({}, pre, _defineProperty({}, key, cur));\n  }, {});\n};\n\n/**\n * 判断对象是否存在一组 matchKey: matchValue\n * @param obj\n * @param matchKey\n * @param matchValue\n * @returns\n */\nexport var isMatchKeyValue = function isMatchKeyValue(obj, matchKey, matchValue) {\n  var isMatch = false;\n  var loop = function loop(param) {\n    // eslint-disable-next-line no-restricted-syntax\n    for (var key in param) {\n      if (Object.prototype.toString.call(param[key]) === '[object Object]' && param[key] !== null) {\n        loop(param[key]);\n      } else {\n        // eslint-disable-next-line no-lonely-if\n        if (key === matchKey) {\n          isMatch = param[key] === matchValue;\n        }\n      }\n    }\n  };\n  loop(obj);\n  return isMatch;\n};\nexport var TOPOLOGY_NODE_PREFIX = 'topology-node-';\nexport var getRealNodeDom = function getRealNodeDom(id) {\n  return document.getElementById(\"\".concat(TOPOLOGY_NODE_PREFIX).concat(id));\n};",{"version":3,"names":["shouldAutoLayout","nodes","length","find","item","position","computeCanvasPoHelper","$wrapper","rect","getBoundingClientRect","canvas","document","querySelector","_canvas$getBoundingCl","width","height","zoom","parseInt","innerHTML","centerX","centerY","scrollLeft","scrollTop","computeCanvasPo","_computeCanvasPoHelpe","po","x","window","pageXOffset","left","y","pageYOffset","top","multiComputeCanvasPo","positionList","_computeCanvasPoHelpe2","map","computeLinePath","start","end","lineOffsetY","arguments","undefined","Math","abs","concat","dir","p1","p2","offsetY","offsetX","OffsetXP1","toFixed","OffsetXP2","offsetYP1","offsetYP2","computeTrianglePath","getNodeSize","dom","indexOf","_typeof","getElementById","impactCheck","point","size","withinX","withinY","computeAnchorPo","anchor","parentNode","$anchor","anchorSize","parentSize","id","parentPosition","dX","dY","Number","isNaN","computeMaxAndMin","includes","minX","Infinity","maxX","minY","maxY","forEach","_ref","nodeSize","min","max","getMaxAndMinNodeId","minXId","maxXId","minYId","maxYId","_ref2","isInViewPort","nodeId","doc","viewWidth","innerWidth","documentElement","clientWidth","viewHeight","offsetHeight","_doc$getElementById$g","right","bottom","computeContentCenter","_computeMaxAndMin","computeContentPostionY","_computeMaxAndMin2","computeNodeInputPo","node","$node","computeMouseClientToCanvas","clientX","clientY","createHashFromObjectArray","arr","field","reduce","pre","cur","key","_objectSpread","_defineProperty","isMatchKeyValue","obj","matchKey","matchValue","isMatch","loop","param","Object","prototype","toString","call","TOPOLOGY_NODE_PREFIX","getRealNodeDom"],"sources":["/Users/zhangtengjin/Desktop/byai/topology/src/lib/utils/index.ts"],"sourcesContent":["// import { path } from 'd3-path';\nimport {\n    IPosition,\n    ITopologyNode,\n} from '../declare';\n\nexport const shouldAutoLayout = (nodes: ITopologyNode[]) => {\n    if (nodes.length === 0) {\n        return false;\n    }\n    return !nodes.find(item => !!item.position);\n};\n\nconst computeCanvasPoHelper = ($wrapper: HTMLDivElement) => {\n    // 当窗口有滚动时，需加上窗口的滚动\n    const rect = $wrapper.getBoundingClientRect();\n    // 缩放的容器\n    const canvas = document.querySelector('.topology-canvas');\n    // 可以获取到 svg 的宽高\n    const { width, height } = canvas.getBoundingClientRect();\n    // eslint-disable-next-line radix\n    const zoom = parseInt(document.querySelector('.topology-tools-percent').innerHTML) / 100;\n    // 缩放后画布的中心点,还是需要用缩放前的比例计算中心点\n    const centerX = width / zoom / 2;\n    const centerY = height / zoom / 2;\n    return {\n        centerX,\n        centerY,\n        rect,\n        zoom,\n        scrollLeft: $wrapper.scrollLeft,\n        scrollTop: $wrapper.scrollTop\n    };\n};\n\n/**\n * 获取相对画布的坐标\n * TODO: 缩放 scale 之后 position 计算有问题，暂时没有想到可以绕过去的方法\n * https://github.com/react-dnd/react-dnd/issues/1730\n * fix：核心逻辑，缩放后以 1 的比例去思考\n * 计算公式：找到中心点的位置 +（鼠标位置 - 中心点的距离) / 缩放）+（一些 dom 的偏离）/ 缩放\n */\nexport const computeCanvasPo = (position: IPosition, $wrapper: HTMLDivElement) => {\n    const {\n        centerX, centerY, rect, zoom, scrollLeft, scrollTop\n    } = computeCanvasPoHelper($wrapper);\n    const po = {\n        x: centerX + (position.x - centerX) / zoom + (scrollLeft + window.pageXOffset - rect.left) / zoom,\n        y: centerY + (position.y - centerY) / zoom + (scrollTop + window.pageYOffset - rect.top) / zoom,\n    } as IPosition;\n    return po;\n};\n\nexport const multiComputeCanvasPo = (positionList: IPosition[], $wrapper: HTMLDivElement) => {\n    const {\n        centerX, centerY, rect, zoom, scrollLeft, scrollTop\n    } = computeCanvasPoHelper($wrapper);\n    return positionList.map((position) => {\n        const po = {\n            x: centerX + (position.x - centerX) / zoom + (scrollLeft + window.pageXOffset - rect.left) / zoom,\n            y: centerY + (position.y - centerY) / zoom + (scrollTop + window.pageYOffset - rect.top) / zoom,\n        } as IPosition;\n        return po;\n    });\n};\n\n\n/** 计算连接线路径 */\nexport const computeLinePath = (start: IPosition, end: IPosition, lineOffsetY: number = 0)/* istanbul ignore next */ => {\n    // const svgPath = path();\n    // // 直线绘制方式（代码暂时保留）\n    // const distance = Math.abs(start.y - end.y) * 0.5 + start.y;\n    // const polyLineY = end.y - start.y < 0 ? end.y - 40 : distance;\n    // const verticalPolyPoint = {\n    //     x: start.x,\n    //     y: polyLineY,\n    // };\n    // const horizontalPolyPoint = {\n    //     x: end.x,\n    //     y: polyLineY,\n    // };\n    // // A collection of points for drawing a line\n    // const linePoints = [\n    //     [{ ...start, y: end.y - start.y < 0 ? start.y - 20 : start.y }, verticalPolyPoint],\n    //     [verticalPolyPoint, horizontalPolyPoint],\n    //     [horizontalPolyPoint, end],\n    // ];\n    // // eslint-disable-next-line\n    // for (let [startPoint, endPoint] of linePoints) {\n    //     svgPath.moveTo(startPoint.x, startPoint.y);\n    //     svgPath.lineTo(endPoint.x, endPoint.y);\n    // }\n    // 弧线绘制方式\n    const x = Math.abs(start.x - end.x);\n    const y = Math.abs(start.y - end.y);\n    if (x === 0 || y === 0) {\n        return `\n            M ${start.x} ${start.y}\n            L ${end.x} ${end.y}\n        `;\n    }\n    let dir: number;\n    let p1: string;\n    let p2: string;\n\n    if (end.y < start.y) {\n        const offsetY = 80;\n        const offsetX = 40;\n        dir = end.x - start.x > 0 ? 1 : -1;\n        p1 = `${start.x + dir * offsetX}, ${start.y + offsetY}`;\n        p2 = `${end.x - dir * offsetX}, ${end.y - offsetY}`;\n        return `\n            M ${start.x} ${start.y - lineOffsetY}\n            C ${p1} ${p2} ${end.x} ${end.y}\n        `;\n    }\n    const OffsetXP1 = +(1 / 12 * x).toFixed(0);\n    const OffsetXP2 = +(11 / 12 * x).toFixed(0);\n    const offsetYP1 = +(1 / 3 * y).toFixed(0);\n    const offsetYP2 = +(2 / 3 * y).toFixed(0);\n    dir = start.x - end.x > 0 ? -1 : 1;\n    p1 = `${start.x + dir * OffsetXP1}, ${start.y + offsetYP1}`;\n    p2 = `${start.x + dir * OffsetXP2}, ${start.y + offsetYP2}`;\n    return `\n        M ${start.x} ${start.y - lineOffsetY}\n        C ${p1} ${p2} ${end.x} ${end.y}\n    `;\n};\n\n/** 计算三角形路径 */\nexport const computeTrianglePath = (start: IPosition, width: number) => `\n    M ${start.x} ${start.y}\n    l ${width / 2} 0\n    l ${-width / 2} ${width}\n    l ${-width / 2} ${-width}\n    Z\n`;\n\nexport const getNodeSize = (dom: string | HTMLElement) => {\n    if (['string', 'number'].indexOf(typeof dom) > -1) {\n        // eslint-disable-next-line no-param-reassign\n        dom = document.getElementById(`dom-map-${dom}`) as HTMLElement;\n    }\n    if (!dom) {\n        return {\n            width: 0,\n            height: 0,\n            left: 0,\n            top: 0,\n        } as ClientRect;\n    }\n    return (dom as HTMLElement).getBoundingClientRect();\n};\n\nexport const impactCheck = (point: IPosition, size: { width: number; height: number }, position: IPosition) => {\n    const withinX = point.x >= position.x && point.x <= position.x + size.width;\n    const withinY = point.y >= position.y && point.y <= position.y + size.height;\n    return withinX && withinY;\n};\n\n/** 计算锚点位置 */\nexport const computeAnchorPo = (anchor: string, parentNode: ITopologyNode) => {\n    const $anchor = document.getElementById(anchor);\n    if (!$anchor) {\n        return null;\n    }\n    const anchorSize = getNodeSize($anchor);\n    const parentSize = getNodeSize(parentNode.id);\n    const parentPosition = parentNode.position || { x: 0, y: 0 };\n    const dX = anchorSize.left - parentSize.left;\n    const dY = anchorSize.top - parentSize.top;\n    const po = {\n        x: parentPosition.x + dX + anchorSize.width / 2,\n        y: parentPosition.y + dY + anchorSize.height,\n    };\n    if (Number.isNaN(po.x) || Number.isNaN(po.y)) {\n        return null;\n    }\n\n    return po;\n};\n\nexport const computeMaxAndMin = (nodes: ITopologyNode[]) => {\n    // @ts-ignore\n    if (!nodes.length || nodes.find(item => !item.position || [item.position.x, item.position.y].includes(undefined))) {\n        return null;\n    }\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    nodes.forEach(({ position, id }) => {\n        const nodeSize = getNodeSize(id);\n        const { x, y } = position;\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x + nodeSize.width);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y + nodeSize.height);\n    });\n    return {\n        minX,\n        maxX,\n        minY,\n        maxY\n    };\n};\n\nexport const getMaxAndMinNodeId = (nodes: ITopologyNode[]) => {\n    // @ts-ignore\n    if (!nodes.length || nodes.find(item => !item.position || [item.position.x, item.position.y].includes(undefined))) {\n        return null;\n    }\n    let minX = Infinity;\n    let maxX = -Infinity;\n    let minY = Infinity;\n    let maxY = -Infinity;\n    let minXId = null;\n    let maxXId = null;\n    let minYId = null;\n    let maxYId = null;\n\n    nodes.forEach(({ position, id }) => {\n        const { x, y } = position;\n        minX = Math.min(minX, x);\n        maxX = Math.max(maxX, x);\n        minY = Math.min(minY, y);\n        maxY = Math.max(maxY, y);\n\n        if (x === minX) {\n            minXId = id;\n        }\n        if (x === maxX) {\n            maxXId = id;\n        }\n        if (y === minY) {\n            minYId = id;\n        }\n        if (y === maxY) {\n            maxYId = id;\n        }\n    });\n    return {\n        minXId,\n        maxXId,\n        minYId,\n        maxYId\n    };\n};\n\n/**\n * TODO: 缩放之后影响到计算判断, viewHeight 可视化高度区分判断是画布高度还是屏幕高度\n * 判断节点是否位于可视区域内\n * @param nodeId\n * @param doc\n * @returns\n */\nexport const isInViewPort = (nodeId, doc) => {\n    const viewWidth = window.innerWidth || document.documentElement.clientWidth;\n    // const viewHeight = window.innerHeight || document.documentElement.clientHeight;\n    const viewHeight = document.documentElement.offsetHeight;\n    const {\n        top,\n        right,\n        bottom,\n        left,\n    } = doc.getElementById(`topology-node-${nodeId}`).getBoundingClientRect();\n    return (\n        top >= 0 && left >= 0 && right <= viewWidth && bottom <= viewHeight\n    );\n};\n\nexport const computeContentCenter = (nodes: ITopologyNode[]) => {\n    if (!computeMaxAndMin(nodes)) return null;\n    const {\n        minX, maxX, minY, maxY\n    } = computeMaxAndMin(nodes);\n    return {\n        x: (minX + maxX) / 2,\n        y: (minY + maxY) / 2,\n    };\n};\n\n\n/**\n * 滚动 Y 轴距离顶部距离\n */\nexport const computeContentPostionY = (nodes: ITopologyNode[]) => {\n    if (!computeMaxAndMin(nodes)) return null;\n    const {\n        minX, maxX, minY\n    } = computeMaxAndMin(nodes);\n    return {\n        x: (minX + maxX) / 2,\n        y: minY,\n    };\n};\n\n/** 计算节点连接处 */\nexport const computeNodeInputPo = (node: ITopologyNode) => {\n    const $node = document.getElementById(`dom-map-${node.id}`);\n    if (!$node) {\n        return null;\n    }\n    const nodeSize = getNodeSize($node);\n    // eslint-disable-next-line no-param-reassign\n    node.position = node.position || { x: 0, y: 0 };\n    const po = {\n        x: node.position.x + nodeSize.width / 2,\n        y: node.position.y,\n    };\n    if (Number.isNaN(po.x) || Number.isNaN(po.y)) {\n        return null;\n    }\n    return po;\n};\n\n/** 计算鼠标相对画布位置 */\nexport const computeMouseClientToCanvas = (clientX: number, clientY: number, $wrapper: HTMLDivElement) => {\n    const rect = $wrapper.getBoundingClientRect();\n    const dX = clientX - rect.left;\n    const dY = clientY - rect.top;\n    return {\n        x: $wrapper.scrollLeft + dX,\n        y: $wrapper.scrollTop + dY,\n    };\n};\n\ntype GetField = (obj: object) => string;\nexport const createHashFromObjectArray = (arr: object[], field: string | GetField) => arr.reduce(\n    (pre, cur: object) => {\n        const key = typeof field === 'string' ? cur[field] : field(cur);\n        return { ...pre, [key]: cur };\n    },\n    {},\n);\n\n\n/**\n * 判断对象是否存在一组 matchKey: matchValue\n * @param obj\n * @param matchKey\n * @param matchValue\n * @returns\n */\nexport const isMatchKeyValue = (obj, matchKey?, matchValue?) => {\n    let isMatch = false;\n    const loop = (param) => {\n        // eslint-disable-next-line no-restricted-syntax\n        for (const key in param) {\n            if (Object.prototype.toString.call(param[key]) === '[object Object]' && param[key] !== null) {\n                loop(param[key]);\n            } else {\n                // eslint-disable-next-line no-lonely-if\n                if (key === matchKey) {\n                    isMatch = (param[key] === matchValue);\n                }\n            }\n        }\n    };\n    loop(obj);\n    return isMatch;\n};\n\nexport const TOPOLOGY_NODE_PREFIX = 'topology-node-';\n\nexport const getRealNodeDom = (id: string) => document.getElementById(`${TOPOLOGY_NODE_PREFIX}${id}`);\n"],"mappings":"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"}]}